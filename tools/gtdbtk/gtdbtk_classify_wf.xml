<tool id="gtdbtk_classify_wf" name="GTDB-Tk classify_wf" version="@TOOL_VERSION@+galaxy0" python_template_version="3.5">
    <description>Determine taxonomic classification of genomes by running the classify workflow</description>

    <macros>
        <token name="@TOOL_VERSION@">2.1.0</token>
    </macros>

    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">gtdbtk</requirement>
    </requirements>

    <command detect_errors="exit_code"><![CDATA[

        ## Configure input variables
        ## ---------------------------------------------------------------------

        ## TODO: DEV ONLY!!
        export GTDBTK_DATA_PATH=/mnt/vdc/gtdbtk/db &&
        export GALAXY_SLOTS=12 &&

        #set INPUT_DIR = 'input_genomes'
        #set $OUTPUT_DIR = 'gtdbtk_out'

        #if $input_genomes[0].is_of_type('fasta.gz'):
        #set EXTENSION = 'gz'
        #else
        #set EXTENSION = 'fa'
        #end if

        ## Format collection as directory
        ## ---------------------------------------------------------------------

        && mkdir $INPUT_DIR
        #for $i, $file in enumerate($input_genomes):
            #if EXTENSION == 'fa':
            && ln -s '$file' $INPUT_DIR/genome_${i}.fasta
            #else
            && ln -s '$file' $INPUT_DIR/genome_${i}.fasta.gz
            #end if
        #end for

        ## Run GTDB-Tk classify
        ## ---------------------------------------------------------------------

        && gtdbtk classify_wf
          --genome_dir $INPUT_DIR
          --out_dir $OUTPUT_DIR
          --extension $EXTENSION
          --cpus \${GALAXY_SLOTS:-2}

    ]]></command>

    <inputs>
        <param type="data_collection" name="input_genomes" label="Genomes to annotate"
          help="A collection of genomes in FASTA format to be classified by GTDB-Tk" format="fasta,fasta.gz"/>
    </inputs>

    <outputs>
<<<<<<< Updated upstream
        <data name="pplacer_bac120_json" format="json" label="${tool.name} on ${on_string} (pplacer.bac120.json)" from_work_dir="gtdbtk_out/pplacer/pplacer.bac120.json"/>
        <data name="pplacer_bac120_out" format="txt" label="${tool.name} on ${on_string} (pplacer.bac120.out)" from_work_dir="gtdbtk_out/pplacer/pplacer.bac120.out"/>
        <data name="bac120_classification_pplacer" format="tabular" label="${tool.name} on ${on_string} (bac120.classification_pplacer.tsv)" from_work_dir="gtdbtk_out/gtdbtk.bac120.classification_pplacer.tsv"/>
        <data name="bac120_classify_tree" format="newick" label="${tool.name} on ${on_string} (bac120.classify.tree)" from_work_dir="gtdbtk_out/gtdbtk.bac120.classify.tree"/>
        <data name="bac120_filtered" format="tabular" label="${tool.name} on ${on_string} (bac120.filtered.tsv)" from_work_dir="gtdbtk_out/gtdbtk.bac120.filtered.tsv"/>
        <data name="bac120_msa" format="fasta" label="${tool.name} on ${on_string} (bac120.msa.fasta)" from_work_dir="gtdbtk_out/gtdbtk.bac120.msa.fasta"/>
        <data name="bac120_red_dictionary" format="tabular" label="${tool.name} on ${on_string} (bac120.red_dictionary.tsv)" from_work_dir="gtdbtk_out/gtdbtk.bac120.red_dictionary.tsv"/>
        <data name="bac120_summary" format="tabular" label="${tool.name} on ${on_string} (bac120.summary.tsv)" from_work_dir="gtdbtk_out/gtdbtk.bac120.summary.tsv"/>
        <data name="bac120_user_msa" format="fasta" label="${tool.name} on ${on_string} (bac120.user_msa.fasta)" from_work_dir="gtdbtk_out/gtdbtk.bac120.user_msa.fasta"/>
        <data name="log" format="txt" label="${tool.name} on ${on_string} (gtdbtk.log)" from_work_dir="gtdbtk_out/gtdbtk.log"/>
        <data name="ar122_markers_summary" format="tabular" label="${tool.name} on ${on_string} (gtdbtk_ar122_markers_summary.tsv)" from_work_dir="gtdbtk_out/gtdbtk_ar122_markers_summary.tsv"/>
        <data name="bac120_markers_summary" format="tabular" label="${tool.name} on ${on_string} (gtdbtk_bac120_markers_summary.tsv)" from_work_dir="gtdbtk_out/gtdbtk_bac120_markers_summary.tsv"/>
        <collection name="gtdbtk_marker_genes" type="list:list" label="${tool.name} on ${on_string}">
            <discover_datasets pattern="(?P&lt;identifier_0&gt;.*\.[0-9]+)_(?P&lt;identifier_1&gt;.*\.tsv)" format="tabular" visible="false" />
            <discover_datasets pattern="(?P&lt;identifier_0&gt;.*\.[0-9]+)_(?P&lt;identifier_1&gt;.*\.faa)" format="fasta" visible="false" />
            <discover_datasets pattern="(?P&lt;identifier_0&gt;.*\.[0-9]+)_(?P&lt;identifier_1&gt;.*\.fna)" format="fasta" visible="false" />
            <discover_datasets pattern="(?P&lt;identifier_0&gt;.*\.[0-9]+)_(?P&lt;identifier_1&gt;.*\.gff)" format="gff3" visible="false" />
            <discover_datasets pattern="(?P&lt;identifier_0&gt;.*\.[0-9]+)_(?P&lt;identifier_1&gt;.*\.out)" format="txt" visible="false" />
        </collection>
=======
      <!-- Standard outputs -->
      <collection name="classify_tree" type="list:list" label="${tool.name} on ${on_string}: Classification trees">
        <discover_datasets
          pattern="gtdbtk\.(?P&lt;designation&gt;.+)\.classify\.tree"
          directory="gtdbtk_out/classify"
          format="newick"
          visible="true"
        />
      </collection>
      <collection name="classify_summary" type="list:list" label="${tool.name} on ${on_string}: Classification summary">
        <discover_datasets
          pattern="gtdbtk\.(?P&lt;designation&gt;.+)\.summary\.tsv"
          directory="gtdbtk_out/classify"
          format="tabular"
          visible="true"
        />
      </collection>
      <data
        name="failed_genomes"
        format="tabular"
        label="${tool.name} on ${on_string}: failed genomes"
        from_work_dir="gtdbtk_out/identify/gtdbtk.failed_genomes.tsv"
      />

      <!-- Optional -->
      <data
        name="gtdbtk_log"
        format="txt"
        label="${tool.name} on ${on_string}: GTDB-Tk log file"
        from_work_dir="gtdbtk_out/gtdbtk.log"
      />
      <data
        name="gtdbtk_warnings"
        format="txt"
        label="${tool.name} on ${on_string}: GTDB-Tk warnings"
        from_work_dir="gtdbtk_out/gtdbtk.warnings.log"
      />

      <!-- Optional: align -->
      <collection name="align_msa_fasta" type="list:list" label="${tool.name} on ${on_string}: Aligned MSA">
        <discover_datasets
          pattern="gtdbtk\.(?P&lt;designation&gt;.+)\.msa\.fasta.gz"
          directory="gtdbtk_out/align"
          format="fasta.gz"
          visible="true"
        />
      </collection>
      <collection name="align_user_msa_fasta" type="list:list" label="${tool.name} on ${on_string}: Aligned user MSA">
        <discover_datasets
          pattern="gtdbtk\.(?P&lt;designation&gt;.+)\.user_msa\.fasta.gz"
          directory="gtdbtk_out/align"
          format="fasta.gz"
          visible="true"
        />
      </collection>
      <collection name="align_msa_filtered" type="list:list" label="${tool.name} on ${on_string}: Aligned MSA - filtered">
        <discover_datasets
          pattern="gtdbtk\.(?P&lt;designation&gt;.+)\.filtered\.tsv"
          directory="gtdbtk_out/align"
          format="tabular"
          visible="true"
        />
      </collection>

      <!-- Optional: identify -->
      <data
        name="align_translation_table"
        type="tabular"
        label="${tool.name} on ${on_string}: translation summary table"
        from_work_dir="identify/gtdbtk.translation_table_summary.tsv"
      >
      </data>
      <collection name="marker_genes" type="list:list" label="${tool.name} on ${on_string}: Marker genes summary">
        <discover_datasets
          pattern="gtdbtk\.(?P&lt;designation&gt;.+)markers_summary\.tsv"
          directory="gtdbtk_out/identify"
          format="tabular"
          visible="true"
        />
      </collection>
>>>>>>> Stashed changes
    </outputs>

    <tests>
        <test>
            <param name="input_genomes">
                <collection type="list">
                    <element name="item1" value="genome_1.fasta.gz"/>
                    <element name="item2" value="genome_2.fasta.gz"/>
                    <element name="item3" value="genome_3.fasta.gz"/>
                </collection>
            </param>
<<<<<<< Updated upstream
            <output name="bac120_classify_tree" ftype="tsv" file="gtdbtk.bac120.classify.tree"/>
=======
            <output name="classify_summary">
              <discovered_dataset
                designation="ar53"
                ftype="tabular"
                file="classify/gtdbtk.ar53.summary.tsv"
              />
            </output>
            <output name="classify_tree">
              <discovered_dataset
                designation="ar53"
                ftype="newick"
                file="classify/gtdbtk.ar53.classify.tree"
              />
            </output>
>>>>>>> Stashed changes
        </test>
    </tests>
    <help><![CDATA[
      TODO
    ]]></help>
    <citations>
        <citation type="doi">10.1093/bioinformatics/btz848</citation>
    </citations>
</tool>
